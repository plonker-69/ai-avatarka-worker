name: CD - Hearmeman Style Build

on:
  push:
    branches: [ main ]
    tags: [ 'v*' ]
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    # Less aggressive cleanup since we're using separate layers
    - name: Free disk space
      uses: jlumbroso/free-disk-space@main
      with:
        tool-cache: false  # Keep some tools
        android: true
        dotnet: true
        haskell: true
        large-packages: true
        docker-images: false  # Keep Docker cache
        swap-storage: true
        
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      with:
        # Enable more efficient caching
        config-inline: |
          [worker.oci]
            gc = true
            gckeepstorage = 5000
            
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        tags: |
          type=ref,event=branch
          type=semver,pattern={{version}}
          type=raw,value=latest,enable={{is_default_branch}}
          
    - name: Ensure required directories exist
      run: |
        # Create lora directory if it doesn't exist
        mkdir -p lora
        touch lora/.gitkeep
        
        # Verify required files
        echo "🔍 Checking required files..."
        required_files=("src/handler.py" "workflow/universal_i2v.json" "prompts/effects.json" "builder/download_models.py")
        for file in "${required_files[@]}"; do
          if [ ! -f "$file" ]; then
            echo "❌ Missing: $file"
            exit 1
          else
            echo "✅ Found: $file"
          fi
        done
        
    - name: Build and push Docker image
      id: build
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./Dockerfile
        platforms: linux/amd64
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        # Use cache for faster builds (Hearmeman approach with layers)
        cache-from: type=gha
        cache-to: type=gha,mode=max
        # Extended timeout for model downloads
        timeout-minutes: 180
        
    - name: Generate deployment summary
      run: |
        IMAGE_TAG=$(echo "${{ steps.meta.outputs.tags }}" | head -1)
        echo "## 🚀 AI-Avatarka Build Complete!" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "**Built using Hearmeman's efficient layer approach**" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "**Container Image:**" >> $GITHUB_STEP_SUMMARY
        echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
        echo "$IMAGE_TAG" >> $GITHUB_STEP_SUMMARY
        echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### 🎯 RunPod Deployment" >> $GITHUB_STEP_SUMMARY
        echo "1. Create RunPod Serverless Endpoint" >> $GITHUB_STEP_SUMMARY
        echo "2. Use container image above" >> $GITHUB_STEP_SUMMARY
        echo "3. Set container disk to 50GB+" >> $GITHUB_STEP_SUMMARY
        echo "4. Configure with worker-config.json" >> $GITHUB_STEP_SUMMARY
        echo "5. Test with sample image upload" >> $GITHUB_STEP_SUMMARY