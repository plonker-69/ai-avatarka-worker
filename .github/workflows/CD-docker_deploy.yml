name: CD - Docker Hub Build

on:
  push:
    branches: [ main ]
    tags: [ 'v*' ]
  workflow_dispatch:

env:
  DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
  IMAGE_NAME: ai-avatarka-worker

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
        
    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.DOCKER_USERNAME }}/${{ env.IMAGE_NAME }}
        tags: |
          type=ref,event=branch
          type=semver,pattern={{version}}
          type=raw,value=latest,enable={{is_default_branch}}
          
    - name: Create required directories
      run: |
        mkdir -p lora
        touch lora/.gitkeep
        
    - name: Build and push to Docker Hub
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./Dockerfile
        platforms: linux/amd64
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        # Use Docker Hub's infrastructure for the heavy lifting
        cache-from: type=registry,ref=${{ env.DOCKER_USERNAME }}/${{ env.IMAGE_NAME }}:cache
        cache-to: type=registry,ref=${{ env.DOCKER_USERNAME }}/${{ env.IMAGE_NAME }}:cache,mode=max
        timeout-minutes: 120
        
    - name: Generate deployment summary
      if: success()
      run: |
        IMAGE_TAG="${{ env.DOCKER_USERNAME }}/${{ env.IMAGE_NAME }}:latest"
        echo "## ðŸš€ AI-Avatarka Build Complete!" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "**Built on Docker Hub infrastructure (free, unlimited space)**" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "**Container Image:**" >> $GITHUB_STEP_SUMMARY
        echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
        echo "$IMAGE_TAG" >> $GITHUB_STEP_SUMMARY
        echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### ðŸŽ¯ RunPod Deployment" >> $GITHUB_STEP_SUMMARY
        echo "1. Create RunPod Serverless Endpoint" >> $GITHUB_STEP_SUMMARY
        echo "2. Use Docker Hub image: \`$IMAGE_TAG\`" >> $GITHUB_STEP_SUMMARY
        echo "3. Set container disk to 50GB+" >> $GITHUB_STEP_SUMMARY
        echo "4. Configure with worker-config.json" >> $GITHUB_STEP_SUMMARY
        echo "5. **Models pre-loaded** - no cold start delays!" >> $GITHUB_STEP_SUMMARY